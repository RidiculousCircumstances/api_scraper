version: '3.9'

networks:
  scraper:
    external: false
  postgres:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redis:
    driver: local

services:
  php-fpm: &base
    build:
      dockerfile: docker/php-fpm/Dockerfile
    volumes:
      - ./scraper:/var/www
      - ./output:/var/www/output
    networks:
      - scraper
      - postgres

  web:
    <<: *base
    container_name: api_scraper-web
    ports:
      - "8000:5000"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  consumer:
    <<: *base
    tty: true
    command: php bin/console messenger:consume -vv async

  #  composer:
  #    build:
  #      dockerfile: ./docker/composer/Dockerfile
  #    environment:
  #      APP_UID: ${APP_UID}
  #      APP_GID: ${APP_GID}
  #    volumes:
  #      - ./scraper:/var/www

  nginx:
    build:
      dockerfile: docker/nginx/Dockerfile
    volumes:
      - ./scraper:/var/www
      - ./docker/nginx/ssl:/etc/nginx/ssl
    ports:
      - "8080:80"
    links:
      - web
    networks:
      - scraper

  db:
    build:
      context: .
      dockerfile: ./docker/postgre/Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - type: bind
        source: ./docker/postgre/init
        target: /docker-entrypoint-initdb.d
      - type: volume
        source: dbdata
        target: /var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U db_user -d scraper_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - postgres

  redis:
    image: "redis:alpine"
    env_file: .env
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./docker/redis/conf/
        target: /usr/local/etc/redis/
      - type: volume
        source: redis
        target: /opt/redis/data/bases
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - scraper